# Generated by Django 5.1.3 on 2024-11-27 00:09

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nombre_de_usuario', models.CharField(max_length=150, verbose_name='Nombre de Usuario')),
                ('correo_electronico', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('edad', models.PositiveIntegerField(blank=True, default=0, verbose_name='Edad')),
                ('es_superusuario', models.BooleanField(default=False)),
                ('es_personal', models.BooleanField(default=False, verbose_name='Es Personal')),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Está activo')),
                ('fecha_union', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha que se unió')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
